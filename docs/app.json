[{"name":"app.R","content":"#\r\n# Shiny app for testing shinylive (i.e.: deploying Shiny app on Github Pages)\r\n#\r\n\r\n# features of my Shiny app that I want to check:\r\n# - some fancy html formating (colors, font size...)\r\n# - loading data (.RDS) from within the app\r\n# - include an image file from within the app\r\n# - interactive features: subsetting dataframe via shiny input\r\n# - include DT::datatable() object with some conditional formating (significance)\r\n# - csv file export\r\n\r\nlibrary(shiny)\r\n\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n  \r\n  # Application title\r\n  titlePanel(\"Meine Shiny App via shinylive\"),\r\n  # titlePanel(fluidRow(column(11, htmlOutput('BT.title.dt1')),\r\n  #                     column(1,HTML(\"<a href='https://www.iqb.hu-berlin.de'>\",\r\n  #                                   \"<img src='iqb-logo.jpg', height=80, style = 'float:right;'/><\/a>\")))),  \r\n\r\n  # Sidebar with a slider input for number of bins \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      sliderInput(\"bins\",\r\n                  \"Number of bins:\",\r\n                  min = 1,\r\n                  max = 50,\r\n                  value = 30)\r\n    ),\r\n    \r\n    # Show a plot of the generated distribution\r\n    mainPanel(\r\n      tableOutput(\"distPlot\")\r\n      # plotOutput(\"distPlot\")\r\n    )\r\n  )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n  \r\n  # output$disttable <- renderTable({faithful})\r\n\r\n  output$distPlot <- renderTable({faithful})\r\n  # output$distPlot <- renderPlot({\r\n  #   # generate bins based on input$bins from ui.R\r\n  #   x    <- faithful[, 2]\r\n  #   bins <- seq(min(x), max(x), length.out = input$bins + 1)\r\n  # \r\n  #   # draw the histogram with the specified number of bins\r\n  #   hist(x, breaks = bins, col = 'darkgray', border = 'white',\r\n  #        xlab = 'Waiting time to next eruption (in mins)',\r\n  #        main = 'Histogram of waiting times')\r\n  # })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
