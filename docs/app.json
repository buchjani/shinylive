[{"name":"app.R","content":"#\r\n# Shiny app for testing shinylive (i.e.: deploying Shiny app on Github Pages)\r\n#\r\n\r\n# features of my Shiny app that I want to check:\r\n# - some fancy html formating (colors, font size...)\r\n# - loading data (.RDS) from within the app\r\n# - include an image file from within the app\r\n# - interactive features: subsetting dataframe via shiny input\r\n# - include DT::datatable() object with some conditional formating (significance)\r\n# - csv file export\r\n\r\nlibrary(shiny)\r\n# library(DT)\r\n# df31 <- readRDS('data/BT2021-Tab3.1web.RDS')\r\n\r\n\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"Deploying my Shiny app on Github Pages\"),\r\n\r\n    # Sidebar with a slider input for number of bins \r\n    sidebarLayout(\r\n        sidebarPanel(\r\n            sliderInput(\"bins\",\r\n                        \"Number of bins:\",\r\n                        min = 1,\r\n                        max = 50,\r\n                        value = 30)\r\n        ),\r\n\r\n        # Show a plot of the generated distribution\r\n        mainPanel(\r\n           plotOutput(\"distPlot\"),\r\n             tableOutput('table')\r\n           \r\n        )\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n\r\n    output$table <- renderTable(iris)\r\n      \r\n    # output$distPlot <- renderPlot({\r\n    #     # generate bins based on input$bins from ui.R\r\n    #     x    <- faithful[, 2]\r\n    #     bins <- seq(min(x), max(x), length.out = input$bins + 1)\r\n    # \r\n    #     # draw the histogram with the specified number of bins\r\n    #     hist(x, breaks = bins, col = 'darkgray', border = 'white',\r\n    #          xlab = 'Waiting time to next eruption (in mins)',\r\n    #          main = 'Histogram of waiting times')\r\n    # })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"data/BT2021-Tab3.1web.RDS","content":"H4sIAAAAAAAABu1a3U8UVxSfZXeVDxEBRam2IoIfyAILsiwssKOxjaTGkGJt35oRZoVkWZrd\ntaY++Qf0H7B/RZM+mTTZSfrUpH3qU99ISEhMeMBoTAkGO8v8fpe9Z2a0aWzVxk2Gs/fcc8/X\nPfecc4f9stEwjKgRi0aMaNz9asQ/v/FJIu3i2t1BqwubXTjrPnUBTzTgiQU88YBnX8CzP+Cp\nD3gaAp7GgKcp4DkQ8DQHPAcDnpaA51DAE/E/sbpdGNvVdV/e/sbOl9QKD9t0xb5TLs0v5q3C\ngmHcr6LaLlsLdiHxxc8/Fctle/mWXbxNFpetb+1iQY3sYn6Jo6bLRZeFXbh1p4a8aC/bJNh/\n1Vqunbxql0pqsvn6kr1gF0vW/OIesv36SnGhuGgvucrYpXLOyqupls+q6KrSiVkXfw/o+jnL\nKu6aAplzGsODGCYuFRatfBnYtjnXfLt0d+l24upKvlR2GcMTjTcWXScsFW67HHRnxufzVqmk\nPA+TctZ8eaXoftupieFITdwyLt/j/jau6vbIC3g6Dk9HZvClbobfojMze8ibpLvpMagjg8Ct\n2j1ms2bPg+rne3PU2P2Y2R9Hqh9zfD1X/Zhnch48DTgE/NSIRzcJ/OCv1c9vZgr4dKfHN3PN\nw4+A/4eQdx7jUcxPg0/6voc/Q70wP4FxBnyHIec44DDoxjA/1amv7wL/PtCnMJ6GvDHAXsyf\nhT0XAckvjXEfYD/4jJEO/qMfejHfT3swPwV6ruuFP/pAT7nT13Q66nUK9CO0F/gMYALyukGX\nBN8s+E0C9gu5o/AD+aVhh4oD8B2BHVnMT2Ddecyfw3rG1TRgGuvOGfzsxmH2mcdfwefe+uy2\nxz/7FGPCP73Fap6QeK6XfLl+E3RPsI7zXL/l2ZF9DHsMoQ/nOQadWs+xlLsBuCXopdynQn85\nvy30Jp527wBPOtpJPOFzoU+YPLkfT4TdxEt+hPS31FfaK/0i/R3mF7nv1G8VeMI14Nf0ecah\nOtdjiOsp7H+a8Y84PvlAz0PMI9MYq3MMeualCeJB3wN65sMxzPN8jmPcA73GsW5i3cNnsH4A\ndIdFXmIemQT9BM5fN/RnvmOexEH3ye2jfrQT9lDfHswPYsx8xXOfAmTeugD5KdBnOYae1O8s\n6EchL4txmvOAJyCPdcb8TrebdKdBR31M5jnuB/VkvgY+Cz0zgL1Y14Mx9b5kQj+sOyn2l3IZ\nL2mdjyHzoTzvPLeM703ENellPpR8ws4P+cl5ef43Bb08dzLPybwtz/mGkMf5sHwTlvdl/gLe\nxOH22RGStxS9zCPkK/1MvqTbEHqH6Uc7sZ+++kI6+lvmOblvtEfGCyH5rArIPEj4h7eecaj6\nizTiNou45TnrhJ/7AZkPJ5FnMjhHZ+Bf5qs08s0Yzk0S9Md57gAzkM8+kn1eB/jJfMD8lICc\nTuDJ/yL8PQm+KfDheU7SXvBh/r8IPZn3mS/Zz0zSftCdgF60Yxz82R8OAU/9hmgH1jP/q7xJ\n/ZhfgZ8Annm4G+PzzIfMw7CH9YP99SD4UL8s5HPfmb8GQMe8Tr+nYM9HGI9QDuMFerEOHsL6\nYeoNPaZgL+si5DIOff2FhPKc8BzI8yDzXlj+ewS9DMxTjuybsE7RyXMn84jMwzIvyHMs7eF4\nU+gV1n+RjnrL/MXxo5C8If0o82ZYn/iqPk3mTblewqfCTrmvgk7l0y2xj6Rfh15rGIdBmQ87\nguPDOeLROw0819648tAbV6CfE/Mgx+xb6AcnBn5xb53i1404awY/7IODPOO0Y74D4zrPPof0\ntIfxesCjq8C+CuxxWnT/mh/g3DaC3z7ANsiBvmaXvp+VHdIB1sPeo+ALP5hR2H0E8uFPM0I6\nyGkC3w34D3qTH+PbQX6p0J9R+kXfN+6D4rtGOuSrgx6sbAv94FfzmK4/9XHadL6qj2WcwA/K\nfwfAp1P3u9K/FRByDe+Nzqz7NLxwP+8sxKsq6/URvof/NfQyIk8qTxozQlxUDmY8SU/Ik88T\nhrGvM0cFUetIH9Px6gbAeUkHPRQ/VowdXb7CCzo1L/RQmVPaR7mko10iE0p9WUF9fMQ6ZW9E\nzziKn6Dz0Uu54mbC/VQQeoT5yyf3eYidcd1fvhskMraCxCNjqzjkjR0ZtvILMjLeEDvtmG8F\nH8iprHp6qwqIzGwehn3kw0oh1qnKfBRyULGdY6hIvKngDbqqjKjMrACqEsMudgCVTRH3qMBm\nC88N1m/oHQahuhGAXtGhcjqd8AvfzLNDeYh5VERWIhU3sLMCvdjRVBj/7PQjtBN0rJSMY+7H\nOuIOUHUwrJDsRLqw//C/0w06VGQVZ4zjx7qeDiq7+o8GOje1z5DjnIKd9A/9Qv1gH6Hxpirz\nay+QiqH/SzjJm69Gb0kf86955B8w9hJjWAFkAt/WE4mvIETFPNcbWC//pcArmEz0YQW6XsdL\nelnI9xqCkMaA62mHsEfxe5V+skBLOvKj3Jigj+pyfAUwpHGSrxp8dKpB0u337Rfl7gh8mFzS\nUX9xBVN08hWELMyicKs4rNf5OixcLCDYFxaSsFfC6moc0QskC5tqmOJKPuIV6w1dT65TBQv/\nqsmyACI+WdicQ96YBYqNhokrorzK86ouzwkLrPoXIxtm6gU7nEY9ztSrid/hLxYu+mMVdOtC\nHvlCP/qbfBT93r55+rPhgb58FUC96R/Gg9mmxy1fKSi/oeAr+3l+wLdCfdAosNEw0YA50Mth\ngyb8qF5tA8+Gy/jfFOi3XvC7At+gg7yUiFD2p2Q95flKnkjxsjT772TAb+mpyCc/ptPJUidL\niO/uLEsX8c/0lBBmh+/OGVLSlN4cizupr3WQpTn0DhtS+qgf7duS+yX0oX9kqyFbA+MV8sVd\n3NcSyH1jShclWI03QadSvP77voK1bPP3fa1Axq7t/bKw5dOV5a/tsl24VyrfyalfGMaHh5LJ\nXv7IrDqY+7hmKlU7laqdGq5dNby3quPKUi5nF105XVV8orruwmACs4cDZnkTORIw9zK2yZey\nTb6EbYi2yZRg2x4wG8QVUy5XfVMaiit3B7gx1Z9X1t13/7hJ5AfxK78oXVm+lf9qIcdfCLoj\nfG1csMrWQK7o8nJHO38BUUaL6JEsAAA=","type":"binary"},{"name":"data/BT2021-Tab4.1web.RDS","content":"H4sIAAAAAAAABoVYCXBTRRgObUpDW0KaHrQQoAdUpVZIsAEEzN9asMqhUiRJC0ravNJKmuJL\nOIQmKTqKDCIwKHgMiNd4ozIMHgOyCHQQxZMRlEEHFRkFFBAFRFv3+Pe1eVZ8M6+bf3f/3f/4\n/m/31ZNiMBgSDcbEHobEJPrTkHT7tAklo2hfBhVyadubthb6JvCJBoORTaJvT/om09dE3170\nZQul0jeNvkzHTN8+qNuDqiXw1sjn9gwo85VACEct2JtaocwLh+oaAr6g32BoZV3Wcp9fCZa4\nd21Tw2GlqVZRZ8slyn33KGpQkxQ10Cil1HKVLqEEa+d1ma4qTYqckFzpa+o6WKmEQtpg7ymN\nil9RQ766hs7OjCnNql9tUBqpMUooXO8LaEN9prJuZnTJrbR/EXabqnw+lbuCe1bFLWhGsaQs\n2OALhLHXWkXdV0ILGmeXVDYHQmG6MEYiZVoDDUJjcDZdIT6YSXUBXyikRRpdqvfVhZtV+qsd\nc2GB2MqFB/7+bSu05t7y7Rh/NURG0L+2VyFmGf/0PnIftPzuajm1ugEiRwo+PTarHKKfbC4x\nTzdCbE7RTwsPtEP08PdV5z/+CqL7D7MJED093ZizZh60pmy7K3rxMMR+KWULQPTsk89/X3UB\nYsfvH/j2bSchBgZ8hB3Wev5A1gj+QNbj7HkCzNifg2069svxTLGI1mZ/xJ792rwMbC2on4nj\nVtG6Lon9NDvckxYdvXFTJni3Cv+ra8LUkT/B88irJnvRT+C9ft0KGinwzhH93s1s+mLwLhH+\ne6bQsPx9DjzHJ7a98OsGOv7Ue/P3bgHPa7PKlo2cBN4TCWk3vXsHePbdQQPzC7izxXyvIW83\njZBmhwHtxCCBEWWjlLFNxnhJ//qgnIByEvqf+h/9uvVcp2Va0I7odpb+ELRa1rPEQ2QLtxOi\n244xh2BxG4PPBIjOFXGLOVbOuPL3XRBd/+iSnoOPQNTwwq9UE6K3i/1i+f1oQD6A2AHhfyzt\nyDDaAzF3G5sI0c8EHqMf83U78YH+W2Se0Q8pm2Te0U+JJ4kLiYNs3TyLxAPOk/HD1nVBFw9P\nxWiPpXYKuCuF/zVrRF1405eNnNj2ItQksPLIpXk+mDJu7nPg/nLvFqoBnldolWQvpfMoqqzN\nUD3meGD5DWvBs47BYzS4T+asoYgCT/4lOlABHqtYx90D5X3j5j57MEWzIxHtTNTlVcMNtj3Q\nbxkffd5lXHvqcCFbuT7i51/4iLBwTP4Cou0Cxy3JzM1iaLlXrL/YyNyKQeT8CVr4UyHShrzy\ng/Cv5R2R78hGGy2wKyCyCvF1QdRVZKdYL3JO4ChiFuMRlYXNo9mRgXZmSp5AuS/6kYN+6vlC\nzs+WOJH8I3GE/ZJvsnX6WjjQDu9+BucFNP/W4LoVt8KM7WZGiFD9teCBmV8wYtkJM7aKfb3t\nwq+avpsyFx2thOpaEZea+YI3Z1jPvHTpeBPUOLm/4DlXzQIF3uEiDp5CUTfVOziONDt6yzzr\neCQNZckHyfH57eQTHc+YdHWWhrLESS/Run6L51Myqnzy52de+os4hnD+I9ftofR/4n5SdrCY\nESG5spKVRy0ZyMqobBlx7ubnBBmzdimdcDO5VuX+k6LXOf+Q0X1EW9ws2mvf4HVInHaOLzK2\n9H1KQH+Q0j38XNLiYUN7+6H9NmwHoP02xEF/9F/OH4DyQByXrRzPlfq4Xn+U+8XHTbMj52Fx\nPg5Jb1DfyNsD1g0sHIPAtlrIRQ/R06HUBUXTBJ/mX3+RHSxQOFOcu1lJPH6Q8ZzgzWJWHQlp\nMHSqwEnKRIGH9G8Efqw2cW4NYmX6+VmDnk8l38l8ynMzXYcD7RzV1VG2Tk/Wi56v5XzkIw0f\n5W/SU2JYfzJiDE37+U+IYyvnS1Kh8jogrlR+Xrr+3CtwMnwtjo9kZWMmZRkszX2J4zDnU+JM\nFLL9A84rpKxOyMN4eXjIhA85X5OxhzgvdeID8zoI/dbyjnYXYKufJ8elPAjjIPXlfIkP/TjW\no2bH4CRGj1bXz6hXmCb0CrDeHdPE+TPUza4hftdZlvbAcsidKXgn7wnBo4MXCN4s5OErhcFY\nZ2YWlfHPuC6y02Tc3Vo++3OYzdLs0Odbuz/p8CD5UvKsdi/TnauaLNfR3efkOsk6/hjKr5+h\nHWf8gvfyBnA/SeYhjmfi+FHwZwG7bRZ8Bjlv8XsXuWqzwE/xbAqLR5eQgWz6mZfBJNYhlglc\nj1xdLO6juTfTqAcfI/ZZ9zHiJjYh/wsfss1De+W9VOZT8ovEhb7N1/GQxhc6XpHjqfHxALPI\nEylEfzM4TSx2dfBruwlso25jRAgGnnYXGbCT30uIuI4XgonezihDQhYfjpB0duzcuImYePdV\nxLaKx4kks7Lst3HHgVOMmPJ3/Cxwptkh8SDrW3+fsujyK+9dWTpc5Uh86OZLnMh1Jd40fMR/\n7gR9TYr83MnFTuOkzg+tJMdwu32y/A5iQtX4OKmi2zGm5uyq5oxTc8apObuqObru5ojbzRG3\nGx8Tn3N9Kxrr6xVVCS7KY/0lbM3vHnxALpTVzbCmm9O9rrbTZZW72dh++Y3tl9vY/j8b/4fH\ndudlN8bh7jfu1O1+4y7KccDppTYvuEaCh/2HIqGV/uno6DgtJiZ0IKgSZcbCtYE7/fUoJVIJ\nf6b4fWHfNfUqXYtK7f8AjruTREQRAAA=","type":"binary"}]
